# new-solid-start/server_examples/nginx.conf
# Fixed: flattened location blocks, replaced full-width semicolons, corrected fastcgi SCRIPT_FILENAME handling.
# Example nginx configuration for:
# - SPA root: /usr/local/www/drawfun
# - PHP API files under: /usr/local/www/drawfun/api (front-controller index.php)
# - phpMyAdmin mapped to: /pa -> /usr/local/www/phpMyAdmin
#
# Notes:
# - Adjust `server_name`, `root`, `alias` and `fastcgi_pass` (php-fpm socket or host:port) for your environment.
# - Test with `nginx -t -c /path/to/nginx.conf` before reloading.
# - This file intentionally does NOT nest `location` blocks and uses ASCII semicolons.

user  www;
worker_processes  auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Upstream to PHP-FPM - adjust to your socket/host:port
    upstream php_fpm_upstream {
        # Example unix socket - change as needed:
        server unix:/var/run/php-fpm.sock;
        # Or TCP socket:
        # server 127.0.0.1:9000;
    }

    server {
        listen 80;
        server_name localhost; # replace with your hostname or domain

        # SPA web root
        root /usr/local/www/drawfun;
        index index.html index.htm;

        # --- Redirect plain /api and /pa (no trailing slash) to include trailing slash ---
        # This prevents requests to "/api" or "/pa" being handled by the SPA fallback.
        location = /api { return 301 /api/; }
        location = /pa  { return 301 /pa/; }

        # --- API endpoints under /api/ ---
        # Serve static assets under /api/ if present; otherwise fall back to /api/index.php
        # Do NOT use ^~ here so that regex PHP handler below can still be tested and selected.
        location /api/ {
            root /usr/local/www/drawfun;
            index index.php;
            try_files $uri $uri/ /api/index.php?$args;
        }

        # PHP handler for API PHP files. Matches URIs like /api/foo.php
        # SCRIPT_FILENAME is built using $document_root + $fastcgi_script_name so it resolves to
        # /usr/local/www/drawfun/api/... based on the server `root`.
        location ~ ^/api/(.+\.php)$ {
            include fastcgi_params;
            fastcgi_pass php_fpm_upstream;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            # optional: fastcgi_split_path_info ^(.+\.php)(/.*)$;
        }

        # --- phpMyAdmin mapping at /pa/ (alias) ---
        # Serve static phpMyAdmin files from /usr/local/www/phpMyAdmin.
        # try_files will attempt direct files, then fall back to /pa/index.php
        location /pa/ {
            alias /usr/local/www/phpMyAdmin/;
            index index.php;
            try_files $uri $uri/ /pa/index.php?$args;
        }

        # PHP handler for phpMyAdmin files under /pa/
        # Because /pa/ uses alias, build SCRIPT_FILENAME from the alias directory + captured path.
        location ~ ^/pa/(.+\.php)$ {
            include fastcgi_params;
            fastcgi_pass php_fpm_upstream;
            fastcgi_index index.php;
            # $1 is the path after /pa/, so construct the real filesystem path for SCRIPT_FILENAME
            fastcgi_param SCRIPT_FILENAME /usr/local/www/phpMyAdmin/$1;
            # optional: fastcgi_split_path_info ^(.+\.php)(/.*)$;
        }

        # --- Static assets caching ---
        location ~* \.(?:css|js|svg|png|jpg|jpeg|gif|ico|webp|ttf|woff2?)$ {
            try_files $uri =404;
            access_log off;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, immutable";
        }

        # --- SPA fallback / static file serving ---
        # All other requests that don't match above will serve static files or fallback to index.html
        # so the client-side router (solid-router) can handle app routing.
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Minimal security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Logging (adjust files/paths as necessary)
        access_log /var/log/nginx/drawfun.access.log;
        error_log  /var/log/nginx/drawfun.error.log warn;
    }
}
